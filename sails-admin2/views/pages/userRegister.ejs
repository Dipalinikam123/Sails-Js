<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        .login-container {
            margin: 20px auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 300px;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }

        input[type="text"],
        input[type="password"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 5px; /* Reduced margin to fit error message */
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .login-container span {
            margin-bottom: 20px;
        }

        .error {
            color: red;
            font-size: 12px;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background-color: #218838;
        }
    </style>
</head>

<body>
    <script>
        function getCookie(name) {
            const cookies = document.cookie.split('; ');
            const cookie = cookies.find(row => row.startsWith(name + '='));
            return cookie ? cookie.split('=')[1] : null; // Return the value or null if not found
        }

        const authToken = getCookie('authToken');
        if (authToken) {
            window.location.href = '/';
        }

        function validateForm(event) {
            // Clear previous error messages
            const errorElements = document.querySelectorAll('.error');
            errorElements.forEach(el => el.textContent = '');

            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const roleInput = document.getElementById('role');
            const enterpriseIdInput = document.getElementById('enterpriseId');
            let valid = true;

            // Validate name
            if (!nameInput.value) {
                valid = false;
                document.getElementById('nameError').textContent = 'Name is required.';
            }

            // Validate email
            if (!emailInput.value) {
                valid = false;
                document.getElementById('emailError').textContent = 'Email is required.';
            } else if (!/\S+@\S+\.\S+/.test(emailInput.value)) {
                valid = false;
                document.getElementById('emailError').textContent = 'Invalid email format.';
            }

            // Validate password
            if (!passwordInput.value) {
                valid = false;
                document.getElementById('passwordError').textContent = 'Password is required.';
            } else if (passwordInput.value.length < 6) {
                valid = false;
                document.getElementById('passwordError').textContent = 'Password must be at least 6 characters.';
            }

            // Validate role selection
            if (roleInput.value === "") {
                valid = false;
                document.getElementById('roleError').textContent = 'Role is required.';
            }

            // Validate enterprise selection
            if (enterpriseIdInput.value === "") {
                valid = false;
                document.getElementById('enterpriseIdError').textContent = 'Enterprise is required.';
            }

            // Prevent form submission if validation fails
            if (!valid) {
                event.preventDefault();
            }
        }
    </script>
    <div class="login-container">
        <h1>Sign Up</h1>
        <form action="/api/signup" method="POST" onsubmit="validateForm(event)">
            <div>
                <label for="name">Name:</label>
                <input type="text" id="name" name="name">
                <span id="nameError" class="error"></span>
            </div>
            <div>
                <label for="email">Email:</label>
                <input type="text" id="email" name="email"> <!-- Changed to type="text" -->
                <span id="emailError" class="error"></span>
            </div>
            <div>
                <label for="password">Password:</label>
                <input type="password" id="password" name="password">
                <span id="passwordError" class="error"></span>
            </div>
            <div>
                <label for="role">Role:</label>
                <select id="role" name="role">
                    <option value="">Select a Role</option>
                    <% [0, 1, 2].map((role) => { %>
                        <option value="<%= role %>">
                            <%= role === 0 ? 'SuperAdmin' : role === 1 ? 'Admin' : 'User' %>
                        </option>
                    <% }) %>
                </select>
                <span id="roleError" class="error"></span>
            </div>
            <div>
                <label for="enterpriseId">Enterprise:</label>
                <select id="enterpriseId" name="enterpriseId">
                    <option value="">Select an Enterprise</option>
                    <% enterprise.map(e => { %>
                        <option value="<%= e.id %>">
                            <%= e.name %>
                        </option>
                    <% }) %>
                </select>
                <span id="enterpriseIdError" class="error"></span>
            </div>
            <button type="submit">Sign Up</button>
        </form>
        <p>Already Have an Account? <a href="/login">Login Here</a></p>
    </div>
</body>

</html>
